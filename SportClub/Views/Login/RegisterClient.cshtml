@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model SportClub.Models.RegisterClientModel
@using Microsoft.AspNetCore.Http
<div class="center pr">
    <form id="registrationForm" action="RegistrationClient" method="post">
        @Html.AntiForgeryToken()
        <div class="card c22">
            @Html.ValidationSummary(true, "")
            <div>
                @Html.DisplayNameFor(model => model.Name)
                <div>
                    @Html.EditorFor(model => model.Name)
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
            </div>
            <div>
                @Html.DisplayNameFor(model => model.Surname)
                <div>
                    @Html.EditorFor(model => model.Surname)
                    <span asp-validation-for="Surname" class="text-danger"></span>
                </div>
            </div>
            <div>
                @Html.DisplayNameFor(model => model.Dopname)
                <div>
                    @Html.EditorFor(model => model.Dopname)
                    <span asp-validation-for="Dopname" class="text-danger"></span>
                </div>
            </div>
            <div>
                @Html.DisplayNameFor(model => model.Login)
                <div>
                    @Html.EditorFor(model => model.Login, new { id = "login" })
                    @*<span id="log" style="color:red; display:none">@Resources.Resource.loginused</span>*@
                    <span asp-validation-for="Login" class="text-danger"></span>
                </div>
            </div>

            <div>
                @Html.DisplayNameFor(model => model.Password)
                <div>
                    @Html.PasswordFor(model => model.Password, new { id = "Password" })
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
            </div>

            <div>
                @Html.DisplayNameFor(model => model.PasswordConfirm)

                <div>
                    @Html.PasswordFor(model => model.PasswordConfirm)
                    <span asp-validation-for="PasswordConfirm" class="text-danger"></span>
                </div>
            </div>
            <div>
                @Html.DisplayNameFor(model => model.Email)
                <div>
                    @Html.EditorFor(model => model.Email, new { id = "emailInput" })
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Phone">@Resources.Resource.Phone:</label>
                <input asp-for="Phone" class="form-control" placeholder="(097)-111 11 11" />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>@Resources.Resource.gender:</label>
                <div class="form-check">
                    <input class="form-check-input" type="radio" asp-for="Gender" value="Мужской" id="male" />
                    <label class="form-check-label" for="male">@Resources.Resource.man:</label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" asp-for="Gender" value="Женский" id="female" />
                    <label class="form-check-label" for="female">@Resources.Resource.female:</label>
                </div>
            </div>
            <div>
                @Html.DisplayNameFor(model => model.DateOfBirth)
                <div>
                    @Html.EditorFor(model => model.DateOfBirth)
                    <span asp-validation-for="DateOfBirth" class="text-danger"></span>
                </div>
            </div>
            <div>
                <br />
                <div>
                    <button class="y" type="submit">@Resources.Resource.Confirm</button>
                </div>
            </div>
        </div>
    </form>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<script>
    $(document).ready(function () {

        $("#login").on("change", function (e) {
            let log = e.target.value;
            let r = true;
            $.getJSON('/Login/IsLoginIn', function (data) {
                $.each(data, function (key, val) {
                    if (log == val) {
                        $("#log").css("display", "block");
                        r = false;
                    }
                    if (r) {
                        $("#log").css("display", "none");
                    }
                })
            });
        });


        $('#emailInput').on('blur', function () {
            var email = $(this).val();
            $.get('/Login/IsEmailInUse', { email: email }, function (data) {
                if (data === true) {
                    $('#emailStatus').text('Email уже занят.');
                }
            });
        });
    });
</script>
