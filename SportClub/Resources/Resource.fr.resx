<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="AddArt" xml:space="preserve">
    <value>ajouter un artiste</value>
  </data>
  <data name="AddedArtist" xml:space="preserve">
    <value>L'artiste a été ajouté :  </value>
  </data>
  <data name="AddedSong" xml:space="preserve">
    <value>La chanson a été ajoutée :  </value>
  </data>
  <data name="AddedStyle" xml:space="preserve">
    <value>Le genre a été ajouté:  </value>
  </data>
  <data name="Addition" xml:space="preserve">
    <value>Ajout</value>
  </data>
  <data name="AddSong" xml:space="preserve">
    <value>Ajouter une chanson</value>
  </data>
  <data name="age" xml:space="preserve">
    <value>âge</value>
  </data>
  <data name="AgeRequired" xml:space="preserve">
    <value>*entrez l'âge</value>
  </data>
  <data name="Album" xml:space="preserve">
    <value>Album</value>
  </data>
  <data name="AllSongs" xml:space="preserve">
    <value>Toutes les chansons</value>
  </data>
  <data name="Artist" xml:space="preserve">
    <value>Сhanteur</value>
  </data>
  <data name="Artists" xml:space="preserve">
    <value>Сhanteurs</value>
  </data>
  <data name="ArtSort" xml:space="preserve">
    <value>chanteurs</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Dos</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="Changelevel" xml:space="preserve">
    <value>Changer le niveau d'accès</value>
  </data>
  <data name="ChooseLang" xml:space="preserve">
    <value>Choisir la langue</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirmer</value>
  </data>
  <data name="Confirmdeletion" xml:space="preserve">
    <value>confirmer la suppression</value>
  </data>
  <data name="Confirmdusers" xml:space="preserve">
    <value>Utilisateurs vérifiés</value>
  </data>
  <data name="Confirmregistration" xml:space="preserve">
    <value>Confirmer l'inscription</value>
  </data>
  <data name="DateB" xml:space="preserve">
    <value>Date de naissance</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="DeleteArt" xml:space="preserve">
    <value>Supprimer l'artiste</value>
  </data>
  <data name="DeletedArtist" xml:space="preserve">
    <value>Le chanteur a été supprimé :  </value>
  </data>
  <data name="DeletedStyle" xml:space="preserve">
    <value>Genre supprimé :  </value>
  </data>
  <data name="DelSong" xml:space="preserve">
    <value>La chanson a été supprimée :  </value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DopName" xml:space="preserve">
    <value>Nom de famille</value>
  </data>
  <data name="download" xml:space="preserve">
    <value>Télécharger</value>
  </data>
  <data name="EdArtist" xml:space="preserve">
    <value>Chanteur édité :  </value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Édition</value>
  </data>
  <data name="EditArt" xml:space="preserve">
    <value>Modifier le chanteur</value>
  </data>
  <data name="Editing" xml:space="preserve">
    <value>Édition</value>
  </data>
  <data name="EditSong" xml:space="preserve">
    <value>Édition d'une chanson</value>
  </data>
  <data name="EdSong" xml:space="preserve">
    <value>Chanson éditée :  </value>
  </data>
  <data name="EdStyle" xml:space="preserve">
    <value>Genre édité :  </value>
  </data>
  <data name="email" xml:space="preserve">
    <value>email</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>champ obligatoire pour l'adresse e-mail</value>
  </data>
  <data name="emailused" xml:space="preserve">
    <value>*l'adresse e-mail est déjà utilisée</value>
  </data>
  <data name="Enter" xml:space="preserve">
    <value>Entrer</value>
  </data>
  <data name="enterArt" xml:space="preserve">
    <value>Entrez votre nom</value>
  </data>
  <data name="enterName" xml:space="preserve">
    <value>Entrez le titre</value>
  </data>
  <data name="female" xml:space="preserve">
    <value>femme</value>
  </data>
  <data name="fields" xml:space="preserve">
    <value>*Remplissez tous les champs</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>Déposer</value>
  </data>
  <data name="Filtr" xml:space="preserve">
    <value>Filtrer</value>
  </data>
  <data name="FiltrBy" xml:space="preserve">
    <value>Filtrer par:</value>
  </data>
  <data name="Find" xml:space="preserve">
    <value>Trouver</value>
  </data>
  <data name="Forward" xml:space="preserve">
    <value>Avant</value>
  </data>
  <data name="gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="Genres" xml:space="preserve">
    <value>Genre</value>
  </data>
  <data name="Level" xml:space="preserve">
    <value>Niveau d'accès</value>
  </data>
  <data name="LightPass" xml:space="preserve">
    <value>plus de 8 caractères, au moins un chiffre, un (A-Z), un (a-z), un caractère spécial</value>
  </data>
  <data name="Listofartists" xml:space="preserve">
    <value>Sélectionnez un artiste dans la liste</value>
  </data>
  <data name="Listofstyles" xml:space="preserve">
    <value>Sélectionnez un genre dans la liste</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Se connecter</value>
  </data>
  <data name="loginN" xml:space="preserve">
    <value>se connecter</value>
  </data>
  <data name="loginpassword" xml:space="preserve">
    <value>le login/mot de passe est incorrect</value>
  </data>
  <data name="loginused" xml:space="preserve">
    <value>*la connexion a déjà été enregistrée</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Sortir</value>
  </data>
  <data name="LogRequired" xml:space="preserve">
    <value>*la connexion est un champ obligatoire</value>
  </data>
  <data name="man" xml:space="preserve">
    <value>mâle</value>
  </data>
  <data name="MusicPortal" xml:space="preserve">
    <value>Portail musical</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="nameArt" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="Newusers" xml:space="preserve">
    <value>Nouveaux utilisateurs</value>
  </data>
  <data name="PassConRequired" xml:space="preserve">
    <value>*une confirmation du mot de passe est requise</value>
  </data>
  <data name="passnoteq" xml:space="preserve">
    <value>*Non concordance des mots de passe</value>
  </data>
  <data name="PassRequired" xml:space="preserve">
    <value>*Mot de passe est un champ obligatoire</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>mot de passe</value>
  </data>
  <data name="passwordConf" xml:space="preserve">
    <value>Confirmez le mot de passe</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Téléphone</value>
  </data>
  <data name="Photo" xml:space="preserve">
    <value>Télécharger une photo</value>
  </data>
  <data name="Post" xml:space="preserve">
    <value>Titre d'emploi</value>
  </data>
  <data name="Registration" xml:space="preserve">
    <value>Registre</value>
  </data>
  <data name="Required" xml:space="preserve">
    <value>Champ obligatoire</value>
  </data>
  <data name="Songname" xml:space="preserve">
    <value>Titre de la chanson</value>
  </data>
  <data name="Sort" xml:space="preserve">
    <value>Trier par:</value>
  </data>
  <data name="Speciality" xml:space="preserve">
    <value>Spécialité</value>
  </data>
  <data name="Style" xml:space="preserve">
    <value>Genre</value>
  </data>
  <data name="StyleSort" xml:space="preserve">
    <value>genre</value>
  </data>
  <data name="Surname" xml:space="preserve">
    <value>Nom de famille</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Texte</value>
  </data>
  <data name="unage" xml:space="preserve">
    <value>*âge incorrect</value>
  </data>
  <data name="unemail" xml:space="preserve">
    <value>*Adresse Email incorrecte</value>
  </data>
  <data name="unlogpass" xml:space="preserve">
    <value>*Identifiant ou mot de passe incorrect</value>
  </data>
  <data name="username" xml:space="preserve">
    <value>utilisateur</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Utilisateurs</value>
  </data>
  <data name="waiting" xml:space="preserve">
    <value>en attente d'inscription</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Accueillir</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Année</value>
  </data>
  <data name="YearSort" xml:space="preserve">
    <value>année de sortie</value>
  </data>
</root>